name: GIS Forge Validation Pipeline

on:
  push:
    branches: [main]
    paths:
      - "src/**"
      - "tests/**"
      - "setup.py"
      - "pyproject.toml"
      - ".github/workflows/**"
  pull_request:
    branches: [main]
  workflow_dispatch: # For manual triggering when map projection anxiety strikes

jobs:
  validate:
    name: üîç Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve source truth
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: |
            pyproject.toml
            setup.py

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Lint with flake8
        run: |
          flake8 src tests --count --statistics --show-source

      - name: Verify formatting with black
        run: |
          black --check --diff src tests

      - name: Type check with mypy
        run: |
          mypy src --show-error-codes

  test:
    name: üß™ Python ${{ matrix.python-version }} on ${{ matrix.os }}
    needs: validate
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # One failure shouldn't halt the coordinate system exploration
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Retrieve source truth
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: |
            pyproject.toml
            setup.py

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,test]"

      - name: Run test suite
        run: |
          pytest --cov=gis_forge tests/ --cov-report=xml

      - name: Upload coverage report
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  build:
    name: üèóÔ∏è Package Assembly
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve source truth
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Full history for version inference

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install build machinery
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Assemble package
        run: |
          python -m build

      - name: Verify package integrity
        run: |
          twine check dist/*
          pip install dist/*.whl
          python -c "import gis_forge; print(f'Version {gis_forge.__version__} successfully verified')"

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: gis-forge-packages
          path: dist/
          if-no-files-found: error
